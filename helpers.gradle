def getValueFromFile (String filePath, String key) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file(filePath).newDataInputStream())
    return properties.getProperty(key)
}

def getValueFromFileWithErrorMessage(filePath, key, String errorMessage) {
    try {
        def appTokenVal = getValueFromFile(filePath, key)
        if (appTokenVal == null){
            throw new InvalidUserDataException(errorMessage)
        }
        return appTokenVal;
    }
    catch (Exception e) {
        throw new InvalidUserDataException(e.message + "\n"+errorMessage);
    }
}

def getValueFromFileOrEnv(String envKey, filePath, fileKey, errorMessage) {
    def appTokenVal = System.getenv(envKey)

    if (!appTokenVal) {
        appTokenVal = getValueFromFileWithErrorMessage(filePath, fileKey, errorMessage)
    }
    return appTokenVal;
}

def injectInStringResourcesAndJavaCode(String stringKey, String buildObjectKey, String value){
    //Passing values to the binary
    //ref: https://gist.github.com/VDenis/46c222b16683447bab33
    android {
        buildTypes {
            buildTypes.each {
                it.buildConfigField 'String', buildObjectKey, '\"' + value + '\"'
                it.resValue 'string', stringKey, value
            }
        }
    }
}

// Export methods by turning them into closures
ext{
    getValueFromFileOrEnv = this.&getValueFromFileOrEnv
    injectInStringResourcesAndJavaCode = this.&injectInStringResourcesAndJavaCode
}